{"version":3,"sources":["components/Navbar.js","components/Header.js","components/Section.js","components/Project.js","components/Footer.js","App.js","index.js"],"names":["styles","navbarStyle","background","justifyContent","Navbar","style","className","href","headingStyle","fontSize","headingTagStyle","Header","headerStyle","sectionStyles","Section","footerStyle","Footer","App","Project","ReactDOM","render","document","getElementById"],"mappings":"oOAKMA,EAAS,CACbC,YAAa,CACXC,WAAY,SACZC,eAAgB,aAmBLC,MAZf,WACE,OACE,qBAAKC,MAAOL,EAAOC,YAAaK,UAAU,SAA1C,SACE,+BACE,6BAAI,mBAAGC,KAAK,IAAR,wBACJ,6BAAI,mBAAGA,KAAK,gBACZ,6BAAI,mBAAGA,KAAK,cACZ,6BAAI,mBAAGA,KAAK,qBCZdP,G,KAAS,CACbQ,aAAc,CACZC,SAAU,QAEZC,gBAAiB,CACfD,SAAU,UAeCE,MATf,WACE,OACE,yBAAQN,MAAOL,EAAOY,YAAaN,UAAU,SAA7C,UACE,oBAAID,MAAOL,EAAOQ,aAAlB,8BACA,oBAAIH,MAAOL,EAAOU,gBAAlB,sCCdAV,G,KAAS,CACba,cAAe,CACbX,WAAY,gBAiBDY,MAXf,WACE,OACE,0BAAST,MAAOL,EAAOa,cAAeP,UAAU,UAAhD,UACE,uCACA,sXCbAN,EAAS,CACXa,cAAe,CACXX,WAAY,WAqDLY,MA/Cf,WACI,OACI,0BAAST,MAAOL,EAAOa,cAAeP,UAAU,UAAhD,UACI,4DACA,k4BAeA,8dASA,i3BCpCNN,EAAS,CACXe,YAAa,CACTb,WAAY,OAEhBM,aAAc,CACVC,SAAU,SAeHO,MATf,WACI,OACI,wBAAQX,MAAOL,EAAOY,YAAaN,UAAU,SAA7C,SACI,oBAAID,MAAOL,EAAOQ,aAAlB,wD,MCFGS,MAZf,WACE,OACE,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACY,EAAD,IACA,cAAC,EAAD,QCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d1649d88.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport '../styles/Navbar.css'\n\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\nconst styles = {\n  navbarStyle: {\n    background: 'purple',\n    justifyContent: 'flex-end',\n  },\n};\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n\nfunction Navbar() {\n  return (\n    <nav style={styles.navbarStyle} className=\"navbar\">\n      <ul>\n        <li><a href=\"/\">Welcome></a></li>\n        <li><a href=\"/Projects\"></a></li>\n        <li><a href=\"/Footer\"></a></li>\n        <li><a href=\"/Contact\"></a></li></ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport '../styles/Header.css';\n\n// By importing the Header.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  headingStyle: {\n    fontSize: '40px',\n  },\n  headingTagStyle: {\n    fontSize: '30px',\n  },\n};\n\n// We use JSX curly braces to evaluate the style object\n\nfunction Header() {\n  return (\n    <header style={styles.headerStyle} className=\"header\">\n      <h1 style={styles.headingStyle}>Stephanie Gaston</h1>\n      <h3 style={styles.headingTagStyle}>Developer + Designer</h3>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport '../styles/Section.css';\n\n\n// By importing the Section.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  sectionStyles: {\n    background: 'light-grey',\n  },\n};\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Section() {\n  return (\n    <section style={styles.sectionStyles} className=\"section\">\n      <h2>About</h2>\n      <p>\n        Innovative visual design professional passionate about developing digital products with cutting edge design. Strengths in creativity, teamwork, and building projects from ideation to execution. Digital arts background coupled with strong technical skills and an eye for modern design principles, makes me a valuable addition to any team.\n      </p>\n    </section>\n  );\n}\n\nexport default Section;\n","import React from 'react';\nimport '../styles/Section.css';\n\n// By importing the Section.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n    sectionStyles: {\n        background: 'orange',\n    },\n};\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Section() {\n    return (\n        <section style={styles.sectionStyles} className=\"section\">\n            <h2>Lorem Ipsum Dolor Sit Amet</h2>\n            <p>\n                Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n                accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab\n                illo inventore veritatis et quasi architecto beatae vitae dicta sunt\n                explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut\n                odit aut fugit, sed quia consequuntur magni dolores eos qui ratione\n                voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum\n                quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam\n                eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat\n                voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam\n                corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur?\n                Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse\n                quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo\n                voluptas nulla pariatur?\n            </p>\n            <p>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n                veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n                commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n                velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n                occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n                mollit anim id est laborum.\n            </p>\n            <p>\n                At vero eos et accusamus et iusto odio dignissimos ducimus qui\n                blanditiis praesentium voluptatum deleniti atque corrupti quos dolores\n                et quas molestias excepturi sint occaecati cupiditate non provident,\n                similique sunt in culpa qui officia deserunt mollitia animi, id est\n                laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita\n                distinctio. Nam libero tempore, cum soluta nobis est eligendi optio\n                cumque nihil impedit quo minus id quod maxime placeat facere possimus,\n                omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem\n                quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet\n                ut et voluptates repudiandae sint et molestiae non recusandae. Itaque\n                earum rerum hic tenetur a sapiente delectus, ut aut reiciendis\n                voluptatibus maiores alias consequatur aut perferendis doloribus\n                asperiores repellat.\n            </p>\n        </section>\n    );\n}\n\nexport default Section;\n","import React from 'react';\nimport '../styles/Header.css';\n\n// By importing the Header.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n    footerStyle: {\n        background: 'red',\n    },\n    headingStyle: {\n        fontSize: '60px',\n    },\n};\n\n// We use JSX curly braces to evaluate the style object\n\nfunction Footer() {\n    return (\n        <footer style={styles.headerStyle} className=\"footer\">\n            <h1 style={styles.headingStyle}>Contact me to get your project rolling:</h1>\n\n        </footer>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport Section from \"./components/Section\";\nimport Project from \"./components/Project\";\n// import Projects from \"./components/Projects\";\n\nimport Footer from \"./components/Footer\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Header />\n      <Section />\n      <Project />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}